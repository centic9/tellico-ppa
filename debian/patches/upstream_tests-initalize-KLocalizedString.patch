From 98027e0d1bc8f737f2371461217eeb3afafd85e0 Mon Sep 17 00:00:00 2001
From: Pino Toscano <pino@kde.org>
Date: Tue, 4 Jul 2023 11:45:06 +0200
Subject: [PATCH] tests: initalize KLocalizedString

Initialize the KLocalizedString domain in tests that directly or
indirectly use KLocalizedString (e.g. by i18n() or other variants);
this avoids the many debug messages in tests such as:
  kf.i18n: KLocalizedString: Using an empty domain, fix the code.

There should be no behaviour change to these tests.
---
 src/tests/adstest.cpp          | 6 ++++++
 src/tests/adstest.h            | 1 +
 src/tests/alexandriatest.cpp   | 3 +++
 src/tests/amctest.cpp          | 6 ++++++
 src/tests/amctest.h            | 1 +
 src/tests/audiofiletest.cpp    | 3 +++
 src/tests/bibtexmltest.cpp     | 3 +++
 src/tests/bibtextest.cpp       | 2 ++
 src/tests/citetest.cpp         | 6 ++++++
 src/tests/citetest.h           | 1 +
 src/tests/ciwtest.cpp          | 6 ++++++
 src/tests/ciwtest.h            | 1 +
 src/tests/collectiontest.cpp   | 2 ++
 src/tests/collectorztest.cpp   | 3 +++
 src/tests/commandtest.cpp      | 3 +++
 src/tests/comparisontest.cpp   | 3 +++
 src/tests/csvtest.cpp          | 3 +++
 src/tests/datacrowtest.cpp     | 3 +++
 src/tests/delicioustest.cpp    | 3 +++
 src/tests/documenttest.cpp     | 3 +++
 src/tests/entitytest.cpp       | 6 ++++++
 src/tests/entitytest.h         | 1 +
 src/tests/fieldtest.cpp        | 6 ++++++
 src/tests/fieldtest.h          | 1 +
 src/tests/fieldwidgettest.cpp  | 2 ++
 src/tests/filelistingtest.cpp  | 3 +++
 src/tests/filtertest.cpp       | 3 +++
 src/tests/formattest.cpp       | 3 +++
 src/tests/goodreadstest.cpp    | 2 ++
 src/tests/griffithtest.cpp     | 3 +++
 src/tests/htmlexportertest.cpp | 3 +++
 src/tests/imagejobtest.cpp     | 3 +++
 src/tests/imagetest.cpp        | 3 +++
 src/tests/librarythingtest.cpp | 6 ++++++
 src/tests/librarythingtest.h   | 1 +
 src/tests/marctest.cpp         | 3 +++
 src/tests/modstest.cpp         | 3 +++
 src/tests/pdftest.cpp          | 3 +++
 src/tests/referencertest.cpp   | 3 +++
 src/tests/ristest.cpp          | 6 ++++++
 src/tests/ristest.h            | 1 +
 src/tests/tellicomodeltest.cpp | 3 +++
 src/tests/vinoxmltest.cpp      | 3 +++
 43 files changed, 133 insertions(+)

Index: git/src/tests/adstest.cpp
===================================================================
--- git.orig/src/tests/adstest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/adstest.cpp	2023-09-24 09:18:22.341650135 +0200
@@ -30,10 +30,16 @@
 #include "../collections/bibtexcollection.h"
 #include "../fieldformat.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( AdsTest )
 
+void AdsTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void AdsTest::testImport() {
   QUrl url = QUrl::fromLocalFile(QFINDTESTDATA("data/test.ads"));
   QList<QUrl> urls;
Index: git/src/tests/adstest.h
===================================================================
--- git.orig/src/tests/adstest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/adstest.h	2023-09-24 09:18:22.341650135 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testImport();
 };
 
Index: git/src/tests/alexandriatest.cpp
===================================================================
--- git.orig/src/tests/alexandriatest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/alexandriatest.cpp	2023-09-24 09:18:22.341650135 +0200
@@ -29,6 +29,8 @@
 #include "../collections/bookcollection.h"
 #include "../images/imagefactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QTemporaryDir>
 #include <QStandardPaths>
@@ -39,6 +41,7 @@
 
 void AlexandriaTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/amctest.cpp
===================================================================
--- git.orig/src/tests/amctest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/amctest.cpp	2023-09-24 09:18:22.341650135 +0200
@@ -29,10 +29,16 @@
 #include "../translators/amcimporter.h"
 #include "../collection.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_GUILESS_MAIN( AmcTest )
 
+void AmcTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 // this is a real basic test right now, AMC doesn't run real well under wine
 void AmcTest::testImport() {
   QUrl url = QUrl::fromLocalFile(QFINDTESTDATA("data/test.amc"));
Index: git/src/tests/amctest.h
===================================================================
--- git.orig/src/tests/amctest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/amctest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testImport();
 };
 
Index: git/src/tests/audiofiletest.cpp
===================================================================
--- git.orig/src/tests/audiofiletest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/audiofiletest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -32,6 +32,8 @@
 #include "../images/imagefactory.h"
 #include "../images/image.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -39,6 +41,7 @@
 
 void AudioFileTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/bibtexmltest.cpp
===================================================================
--- git.orig/src/tests/bibtexmltest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/bibtexmltest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -32,6 +32,8 @@
 #include "../collectionfactory.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_GUILESS_MAIN( BibtexmlTest )
@@ -39,6 +41,7 @@
 #define QL1(x) QStringLiteral(x)
 
 void BibtexmlTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/bibtexml2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::BibtexCollection> registerBibtexml(Tellico::Data::Collection::Bibtex, "bibtex");
Index: git/src/tests/bibtextest.cpp
===================================================================
--- git.orig/src/tests/bibtextest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/bibtextest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -35,6 +35,7 @@
 
 #include <KSharedConfig>
 #include <KConfigGroup>
+#include <KLocalizedString>
 
 #include <QTest>
 
@@ -43,6 +44,7 @@
 #define QL1(x) QStringLiteral(x)
 
 void BibtexTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   // since we use the bibtex mapping file
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../translators/bibtex-translation.xml"));
 }
Index: git/src/tests/citetest.cpp
===================================================================
--- git.orig/src/tests/citetest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/citetest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -30,6 +30,8 @@
 #include "../config/tellico_config.h"
 #include "../collections/bibtexcollection.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QTemporaryFile>
 #include <QApplication>
@@ -37,6 +39,10 @@
 
 QTEST_MAIN( CiteTest )
 
+void CiteTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void CiteTest::testLyxpipe() {
   QTemporaryFile tempFile(QStringLiteral("citetest.XXXXXX.in"));
   QVERIFY(tempFile.open());
Index: git/src/tests/citetest.h
===================================================================
--- git.orig/src/tests/citetest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/citetest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testLyxpipe();
   void testLyxpipeNotExists();
   void testClipboard();
Index: git/src/tests/ciwtest.cpp
===================================================================
--- git.orig/src/tests/ciwtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/ciwtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -28,12 +28,18 @@
 #include "../collections/bibtexcollection.h"
 #include "../fieldformat.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( CiwTest )
 
 #define QSL(x) QStringLiteral(x)
 
+void CiwTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void CiwTest::testImport() {
   QUrl url = QUrl::fromLocalFile(QFINDTESTDATA("/data/test.ciw"));
   QList<QUrl> urls;
Index: git/src/tests/ciwtest.h
===================================================================
--- git.orig/src/tests/ciwtest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/ciwtest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testImport();
 };
 
Index: git/src/tests/collectiontest.cpp
===================================================================
--- git.orig/src/tests/collectiontest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/collectiontest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -38,6 +38,7 @@
 #include "../utils/mergeconflictresolver.h"
 #include "../entrycomparison.h"
 
+#include <KLocalizedString>
 #include <KProcess>
 
 #include <QTest>
@@ -68,6 +69,7 @@
 void CollectionTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
   qRegisterMetaType<Tellico::EntryComparison::MatchValue>();
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
   // need to register the collection types
   Tellico::CollectionInitializer ci;
Index: git/src/tests/collectorztest.cpp
===================================================================
--- git.orig/src/tests/collectorztest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/collectorztest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -35,6 +35,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -42,6 +44,7 @@
 
 void CollectorzTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/collectorz2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
Index: git/src/tests/commandtest.cpp
===================================================================
--- git.orig/src/tests/commandtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/commandtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,8 @@
 #include "../collectionfactory.h"
 #include "../images/imagefactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 #include <QFile>
@@ -39,6 +41,7 @@
 
 void CommandTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
 
Index: git/src/tests/comparisontest.cpp
===================================================================
--- git.orig/src/tests/comparisontest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/comparisontest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -29,11 +29,14 @@
 #include "../models/fieldcomparison.h"
 #include "../config/tellico_config.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_GUILESS_MAIN( ComparisonTest )
 
 void ComparisonTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::Config::setArticlesString(QStringLiteral("the,l'"));
 }
 
Index: git/src/tests/csvtest.cpp
===================================================================
--- git.orig/src/tests/csvtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/csvtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,8 @@
 #include "../collections/bookcollection.h"
 #include "../collections/musiccollection.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -40,6 +42,7 @@
 
 void CsvTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::RegisterCollection<Tellico::Data::MusicCollection> registerAlbum(Tellico::Data::Collection::Album, "album");
 }
Index: git/src/tests/datacrowtest.cpp
===================================================================
--- git.orig/src/tests/datacrowtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/datacrowtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -35,6 +35,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -42,6 +44,7 @@
 
 void DataCrowTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/datacrow2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
Index: git/src/tests/delicioustest.cpp
===================================================================
--- git.orig/src/tests/delicioustest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/delicioustest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -36,6 +36,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 #define FIELDS(entry, fieldName) Tellico::FieldFormat::splitValue(entry->field(fieldName))
@@ -44,6 +46,7 @@
 QTEST_GUILESS_MAIN( DeliciousTest )
 
 void DeliciousTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/delicious2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
Index: git/src/tests/documenttest.cpp
===================================================================
--- git.orig/src/tests/documenttest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/documenttest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -32,6 +32,8 @@
 #include "../collections/bookcollection.h"
 #include "../collectionfactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QTemporaryDir>
 #include <QTemporaryFile>
@@ -42,6 +44,7 @@
 
 void DocumentTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
   // test case is a book file
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
Index: git/src/tests/entitytest.cpp
===================================================================
--- git.orig/src/tests/entitytest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/entitytest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -28,12 +28,18 @@
 
 #include "../utils/string_utils.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( EntityTest )
 
 #define QSL(x) QStringLiteral(x)
 
+void EntityTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void EntityTest::testEntities() {
   QFETCH(QByteArray, data);
   QFETCH(QString, expectedString);
Index: git/src/tests/entitytest.h
===================================================================
--- git.orig/src/tests/entitytest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/entitytest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testEntities();
   void testEntities_data();
   void testAccents();
Index: git/src/tests/fieldtest.cpp
===================================================================
--- git.orig/src/tests/fieldtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/fieldtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -29,10 +29,16 @@
 #include "../field.h"
 #include "../gui/urlfieldlogic.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( FieldTest )
 
+void FieldTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void FieldTest::testAll() {
   Tellico::Data::Field field1(QStringLiteral("name"), QStringLiteral("title"));
 
Index: git/src/tests/fieldtest.h
===================================================================
--- git.orig/src/tests/fieldtest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/fieldtest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testAll();
   void testUrlFieldLogic();
 };
Index: git/src/tests/fieldwidgettest.cpp
===================================================================
--- git.orig/src/tests/fieldwidgettest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/fieldwidgettest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -42,6 +42,7 @@
 #include "../collections/bookcollection.h"
 #include "../collectionfactory.h"
 
+#include <KLocalizedString>
 #include <KTextEdit>
 #include <KUrlRequester>
 
@@ -57,6 +58,7 @@
 
 void FieldWidgetTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::ImageFactory::init();
 }
Index: git/src/tests/filelistingtest.cpp
===================================================================
--- git.orig/src/tests/filelistingtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/filelistingtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,8 @@
 #include "../translators/xmphandler.h"
 #include "../images/imagefactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -39,6 +41,7 @@
 
 void FileListingTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/filtertest.cpp
===================================================================
--- git.orig/src/tests/filtertest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/filtertest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -33,6 +33,8 @@
 #include "../images/imageinfo.h"
 #include "../images/imagefactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -40,6 +42,7 @@
 
 void FilterTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/formattest.cpp
===================================================================
--- git.orig/src/tests/formattest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/formattest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -29,11 +29,14 @@
 #include "../fieldformat.h"
 #include "../config/tellico_config.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_GUILESS_MAIN( FormatTest )
 
 void FormatTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::Config::setArticlesString(QStringLiteral("the,l'"));
   Tellico::Config::setNoCapitalizationString(QStringLiteral("the,of,et,de"));
 }
Index: git/src/tests/goodreadstest.cpp
===================================================================
--- git.orig/src/tests/goodreadstest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/goodreadstest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -34,6 +34,7 @@
 #include <KConfig>
 #include <KSharedConfig>
 #include <KConfigGroup>
+#include <KLocalizedString>
 
 #include <QTest>
 #include <QNetworkInterface>
@@ -54,6 +55,7 @@
 
 void GoodreadsTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/goodreads2tellico.xsl"));
   Tellico::ImageFactory::init();
Index: git/src/tests/griffithtest.cpp
===================================================================
--- git.orig/src/tests/griffithtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/griffithtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,8 @@
 #include "../images/imagefactory.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -41,6 +43,7 @@
 
 void GriffithTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/griffith2tellico.xsl"));
   Tellico::ImageFactory::init();
   // need to register the collection type
Index: git/src/tests/htmlexportertest.cpp
===================================================================
--- git.orig/src/tests/htmlexportertest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/htmlexportertest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -38,6 +38,8 @@
 #include "../utils/datafileregistry.h"
 #include "../config/tellico_config.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QRegularExpression>
 #include <QTemporaryDir>
@@ -49,6 +51,7 @@
 
 void HtmlExporterTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::RegisterCollection<Tellico::Data::VideoCollection> registerVideo(Tellico::Data::Collection::Video, "video");
Index: git/src/tests/imagejobtest.cpp
===================================================================
--- git.orig/src/tests/imagejobtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/imagejobtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -29,6 +29,8 @@
 #include "../images/imagefactory.h"
 #include "../images/imageinfo.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QEventLoop>
 #include <QTemporaryFile>
@@ -51,6 +53,7 @@
 
 void ImageJobTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/imagetest.cpp
===================================================================
--- git.orig/src/tests/imagetest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/imagetest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -27,6 +27,8 @@
 #include "../images/imagefactory.h"
 #include "../images/image.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -34,6 +36,7 @@
 
 void ImageTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
 }
 
Index: git/src/tests/librarythingtest.cpp
===================================================================
--- git.orig/src/tests/librarythingtest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/librarythingtest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -29,10 +29,16 @@
 #include "../translators/librarythingimporter.h"
 #include "../fieldformat.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( LibraryThingTest )
 
+void LibraryThingTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void LibraryThingTest::testImport() {
   QUrl url = QUrl::fromLocalFile(QFINDTESTDATA("data/librarything.json"));
    Tellico::Import::LibraryThingImporter importer(url);
Index: git/src/tests/librarythingtest.h
===================================================================
--- git.orig/src/tests/librarythingtest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/librarythingtest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testImport();
 };
 
Index: git/src/tests/marctest.cpp
===================================================================
--- git.orig/src/tests/marctest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/marctest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -32,12 +32,15 @@
 #include "../collectionfactory.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
 QTEST_APPLESS_MAIN( MarcTest )
 
 void MarcTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BibtexCollection> registerBibtex(Tellico::Data::Collection::Bibtex, "bibtex");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/mods2tellico.xsl"));
Index: git/src/tests/modstest.cpp
===================================================================
--- git.orig/src/tests/modstest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/modstest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -33,6 +33,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QDomDocument>
 #include <QTextCodec>
@@ -40,6 +42,7 @@
 QTEST_APPLESS_MAIN( ModsTest )
 
 void ModsTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/mods2tellico.xsl"));
 }
Index: git/src/tests/pdftest.cpp
===================================================================
--- git.orig/src/tests/pdftest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/pdftest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -35,6 +35,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -43,6 +45,7 @@
 
 void PdfTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::RegisterCollection<Tellico::Data::BibtexCollection> registerBibtex(Tellico::Data::Collection::Bibtex, "bibliography");
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
   // since we use the XMP importer
Index: git/src/tests/referencertest.cpp
===================================================================
--- git.orig/src/tests/referencertest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/referencertest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -32,6 +32,8 @@
 #include "../fieldformat.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 #define FIELDS(entry, fieldName) Tellico::FieldFormat::splitValue(entry->field(fieldName))
@@ -39,6 +41,7 @@
 QTEST_GUILESS_MAIN( ReferencerTest )
 
 void ReferencerTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/referencer2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::BibtexCollection> registerBibtex(Tellico::Data::Collection::Bibtex, "bibtex");
Index: git/src/tests/ristest.cpp
===================================================================
--- git.orig/src/tests/ristest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/ristest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -30,10 +30,16 @@
 #include "../collections/bibtexcollection.h"
 #include "../fieldformat.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 
 QTEST_APPLESS_MAIN( RisTest )
 
+void RisTest::initTestCase() {
+  KLocalizedString::setApplicationDomain("tellico");
+}
+
 void RisTest::testImport() {
   QUrl url = QUrl::fromLocalFile(QFINDTESTDATA("data/test.ris"));
   QList<QUrl> urls;
Index: git/src/tests/ristest.h
===================================================================
--- git.orig/src/tests/ristest.h	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/ristest.h	2023-09-24 09:18:22.345650323 +0200
@@ -31,6 +31,7 @@
 Q_OBJECT
 
 private Q_SLOTS:
+  void initTestCase();
   void testImport();
 };
 
Index: git/src/tests/tellicomodeltest.cpp
===================================================================
--- git.orig/src/tests/tellicomodeltest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/tellicomodeltest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -40,6 +40,8 @@
 #include "../entrygroup.h"
 #include "../images/imagefactory.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QSignalSpy>
 #include <QStandardPaths>
@@ -48,6 +50,7 @@
 
 void TellicoModelTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::ImageFactory::init();
   Tellico::RegisterCollection<Tellico::Data::BookCollection> registerBook(Tellico::Data::Collection::Book, "book");
 }
Index: git/src/tests/vinoxmltest.cpp
===================================================================
--- git.orig/src/tests/vinoxmltest.cpp	2023-09-24 09:18:22.353650699 +0200
+++ git/src/tests/vinoxmltest.cpp	2023-09-24 09:18:22.345650323 +0200
@@ -34,6 +34,8 @@
 #include "../images/imageinfo.h"
 #include "../utils/datafileregistry.h"
 
+#include <KLocalizedString>
+
 #include <QTest>
 #include <QStandardPaths>
 
@@ -41,6 +43,7 @@
 
 void VinoXMLTest::initTestCase() {
   QStandardPaths::setTestModeEnabled(true);
+  KLocalizedString::setApplicationDomain("tellico");
   Tellico::DataFileRegistry::self()->addDataLocation(QFINDTESTDATA("../../xslt/vinoxml2tellico.xsl"));
   // need to register the collection type
   Tellico::RegisterCollection<Tellico::Data::WineCollection> registerWine(Tellico::Data::Collection::Wine, "wine");
